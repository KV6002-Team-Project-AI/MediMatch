/*!
 * Built with Duet Design System
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-00f527af.js');
const themeableComponent = require('./themeable-component-83a2a0d4.js');
const keyboardUtils = require('./keyboard-utils-7248dd0a.js');

const duetToolbarDropdownLinkCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;width:100%;height:100%}.duet-toolbar-dropdown-link{display:flex;flex-direction:row;gap:12px;align-items:center;justify-content:flex-start;height:100%;padding:0.5rem 8px;font-family:\"localtapiola-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:rgb(0, 41, 77);text-align:center;text-decoration:none}.duet-toolbar-dropdown-link:focus{outline:0;box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}.duet-theme-turva .duet-toolbar-dropdown-link:focus,.duet-toolbar-dropdown-link:focus.duet-theme-turva{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}.duet-toolbar-dropdown-link .label{flex:1;text-align:left}.duet-toolbar-dropdown-link.duet-theme-turva{font-family:\"turva-sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(23, 28, 58)}.duet-toolbar-dropdown-link.active{background:rgb(243, 249, 252)}.duet-toolbar-dropdown-link.active.duet-theme-turva{background:rgb(245, 245, 247)}.duet-toolbar-dropdown-link:hover{background:rgb(230, 242, 248)}.duet-toolbar-dropdown-link:hover.duet-theme-turva{background:rgb(228, 228, 230)}";

const DuetToolbarDropdownLink = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.accessibleLabel = undefined;
        this.theme = "";
        this.targetLanguage = undefined;
        this.href = "#";
        this.icon = undefined;
        this.active = false;
    }
    /**
     * Component lifecycle events.
     */
    componentWillLoad() {
        themeableComponent.inheritGlobalTheme(this);
    }
    handleEscape(e) {
        if (keyboardUtils.isEscapeKey(e)) {
            const dropdown = this.element.closest("duet-toolbar-dropdown");
            dropdown.open = false;
            dropdown.setFocus();
        }
    }
    /**
     * render() function
     * Always the last one in the class.
     */
    render() {
        return (index.h(index.Host, null, index.h("a", { class: {
                "duet-toolbar-dropdown-link": true,
                "duet-theme-turva": this.theme === "turva",
                active: this.active,
            }, href: this.href, lang: this.targetLanguage, hreflang: this.targetLanguage, role: "menuitem", "aria-label": this.accessibleLabel, "aria-current": this.active ? "true" : "false", onKeyUp: e => this.handleEscape(e) }, this.icon && index.h("duet-icon", { name: this.icon, size: "x-small", margin: "none" }), index.h("span", { class: "label" }, index.h("slot", null)), this.active && (index.h("duet-icon", { name: "messaging-checked-small", size: "xx-small", margin: "none", color: "currentColor" })))));
    }
    get element() { return index.getElement(this); }
};
DuetToolbarDropdownLink.style = duetToolbarDropdownLinkCss;

exports.duet_toolbar_dropdown_link = DuetToolbarDropdownLink;
