/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
describe("duet-alert", () => {
    it("should render an alert", async () => {
        const page = await createPage(`<duet-alert>Test</duet-alert>`);
        const component = await page.find("duet-alert");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should provide a property that removes the margin of the component", async () => {
        const page = await createPage(`<duet-alert margin="none"></duet-alert>`);
        const element = await page.find("duet-alert >>> .duet-alert");
        expect(element).toHaveClass("duet-m-0");
    });
    it("should provide a property that removes the padding of the component", async () => {
        const page = await createPage(`<duet-alert padding="none"></duet-alert>`);
        const element = await page.find("duet-alert >>> .duet-alert");
        expect(element).toHaveClass("duet-p-0");
    });
    it("should provide a property that renders alert in different style variations", async () => {
        const page = await createPage(`<duet-alert variation="danger">Test</duet-alert>`);
        const element = await page.find("duet-alert >>> .duet-alert");
        expect(element).toHaveClass("danger");
    });
    it("should provide a property that switches the theme", async () => {
        const page = await createPage(`<duet-alert theme="turva">Test</duet-alert>`);
        const element = await page.find("duet-alert >>> .duet-alert");
        expect(element).toHaveClass("duet-theme-turva");
    });
    it("should provide a property that adds an icon", async () => {
        const page = await createPage(`<duet-alert icon="messaging-alert">Test</duet-alert>`);
        const element = await page.find("duet-alert >>> .duet-alert-icon");
        expect(element).not.toBeNull();
    });
    it("can be dismissed", async () => {
        const page = await createPage(`<duet-alert dismissible>Test</duet-alert>`);
        const alert = await page.find("duet-alert");
        const duetDismiss = await alert.spyOnEvent("duetDismiss");
        const button = await page.find("duet-alert >>> duet-button");
        await button.click();
        expect(duetDismiss).toHaveReceivedEventTimes(1);
    });
    it("can have announcements disabled", async () => {
        const page = await createPage(`<duet-alert variation="danger">Test</duet-alert>`);
        const alert = await page.find("duet-alert");
        expect(alert).toEqualAttribute("role", "alert");
        alert.setProperty("announcements", false);
        await page.waitForChanges();
        expect(alert).not.toHaveAttribute("role");
    });
});
