/*!
 * Built with Duet Design System
 */
import arrowRightSmallIcon from "@duetds/icons/lib/assets/action-arrow-right-small";
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
import { subscribeTabbingChange, unsubscribeTabbingChange } from "../../utils/keyboard-utils";
import { connectLanguageChangeObserver, disconnectLanguageChangeObserver, getLanguage, getLocaleString, } from "../../utils/language-utils";
export class DuetBreadcrumb {
    constructor() {
        this.currentCrumb = {
            fi: "disabled. Nykyinen sivu",
            sv: "disabled. Visa mer",
            en: "disabled. Nuvarande sida",
        };
        this.hasSlottedContent = false;
        this.theme = "";
        this.language = getLanguage();
        this.href = "";
        this.icon = "";
        this.iconSize = "x-small";
        this.accessibleLabel = undefined;
    }
    /**
     * Component lifecycle events.
     */
    componentWillLoad() {
        inheritGlobalTheme(this);
    }
    connectedCallback() {
        connectLanguageChangeObserver(this);
        subscribeTabbingChange(this);
        this.hasSlottedContent = Array.from(this.element.childNodes).length > 0;
    }
    disconnectedCallback() {
        disconnectLanguageChangeObserver(this);
        unsubscribeTabbingChange(this);
    }
    /**
     * render() function
     * Always the last one in the class.
     */
    render() {
        var _a;
        return (h(Host, { role: "listitem" }, h("div", { class: "container" }, !this.icon && (h("duet-icon", { class: "duet-breadrumbs-arrow", size: "auto", icon: arrowRightSmallIcon.svg, margin: "none", color: "currentColor" })), h("a", { class: {
                "duet-breadcrumb": true,
                "duet-theme-turva": this.theme === "turva",
            }, href: this.href ? this.href : undefined, "aria-label": `${!this.href ? `${getLocaleString(this.currentCrumb)} ` : ""}${(_a = this.accessibleLabel) !== null && _a !== void 0 ? _a : this.element.innerHTML}`, role: "link" }, this.icon && [
            h("duet-icon", { size: this.iconSize, name: this.icon, margin: "none", color: "currentColor" }),
            this.hasSlottedContent && h("duet-spacer", { size: "x-small", direction: "horizontal" }),
        ], h("slot", null)))));
    }
    static get is() { return "duet-breadcrumb"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["duet-breadcrumb.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["duet-breadcrumb.css"]
        };
    }
    static get properties() {
        return {
            "theme": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "DuetTheme",
                    "resolved": "\"\" | \"default\" | \"turva\"",
                    "references": {
                        "DuetTheme": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetTheme"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Theme"
                },
                "attribute": "theme",
                "reflect": false,
                "defaultValue": "\"\""
            },
            "href": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Href"
                },
                "attribute": "href",
                "reflect": false,
                "defaultValue": "\"\""
            },
            "icon": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "DuetIconName",
                    "resolved": "string",
                    "references": {
                        "DuetIconName": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetIconName"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Icon"
                },
                "attribute": "icon",
                "reflect": false,
                "defaultValue": "\"\""
            },
            "iconSize": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetIconSize",
                    "resolved": "\"auto\" | \"large\" | \"medium\" | \"small\" | \"x-large\" | \"x-small\" | \"xx-large\" | \"xx-small\" | \"xxx-large\" | \"xxx-small\"",
                    "references": {
                        "DuetIconSize": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetIconSize"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Icon size"
                },
                "attribute": "icon-size",
                "reflect": false,
                "defaultValue": "\"x-small\""
            },
            "accessibleLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Adds accessible label for the link that is only shown for screen readers.\nTypically, this label text replaces the visible text on the link for users\nwho use assistive technology."
                },
                "attribute": "accessible-label",
                "reflect": false
            }
        };
    }
    static get states() {
        return {
            "language": {}
        };
    }
    static get elementRef() { return "element"; }
}
