/*!
 * Built with Duet Design System
 */
import { formatViolations, options as axeRunOptions, testWithAxe } from "../../utils/axe-core-utils";
describe("[a11y] duet-button", () => {
    it("should render an accessible component", async () => {
        const result = await testWithAxe(`
        <duet-button variation="primary">Primary button</duet-button>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component with icon", async () => {
        const result = await testWithAxe(`
        <duet-button variation="primary" icon="navigation-arrow-left" fixed> With icon on left </duet-button>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component in loading state", async () => {
        const result = await testWithAxe(`
        <duet-button variation="primary" loading> Button in loading state </duet-button>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component in destructive variant", async () => {
        const result = await testWithAxe(`
        <duet-button variation="destructive-primary">Destructive primary button</duet-button>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component as a link", async () => {
        const result = await testWithAxe(`
          <duet-button variation="primary" url="https://www.duetds.com">Button as link</duet-button>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible, icon-only component", async () => {
        const result = await testWithAxe(`
        <duet-button accessible-label="Search" fixed icon-only id="icon" icon="form-search"></duet-button>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
});
