/*!
 * Built with Duet Design System
 */
import { formatViolations, options as axeRunOptions, testWithAxe } from "../../utils/axe-core-utils";
describe("[a11y] duet-choice", () => {
    it("should render an accessible component as a radio", async () => {
        const result = await testWithAxe(`
        <duet-choice-group value="one" label="Vakuutus" direction="horizontal" name="group" responsive>
          <duet-choice label="Eläinvakuutus" type="radio" value="one" expand></duet-choice>
        </duet-choice-group>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component as a checkbox", async () => {
        const result = await testWithAxe(`
        <duet-fieldset label="Lemmikit" caption="Valitse yksi tai useampi vaihtoehto:">
          <duet-grid responsive>
            <duet-choice label="Kissa" value="kissa" icon="category-pet-cat" checked expand></duet-choice>
          </duet-grid>
        </duet-fieldset>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible, collapsible component", async () => {
        const result = await testWithAxe(`
        <duet-fieldset label="Lemmikit" caption="Valitse yksi tai useampi vaihtoehto:">
          <duet-choice label="Kissa" icon="category-pet-cat" checked expand collapsible>
              <span slot="header"><duet-caption>This explains the collapsible content</duet-caption></span>

              <duet-paragraph
                >LähiTapiola-ryhmä on keskinäiseen yhtiömuotoon perustuva, asiakkaidensa omistama yhtiöryhmä, joka palvelee monia
                eri asiakasryhmiä. <duet-link url="https://www.lahitapiola.fi/henkilo">LähiTapiolan tuotteet</duet-link> ja
                palvelut kattavat vahinko-, henki- ja eläkevakuuttamisen sekä sijoittamisen ja säästämisen palvelut. Olemme myös
                yritysten riskienhallinnan ja henkilöstön työhyvinvoinnin ammattilainen. Omistaja-asiakkaita meillä on lähes 1,6
                miljoonaa.</duet-paragraph
              >
            </duet-choice>
        </duet-fieldset>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component with info", async () => {
        const result = await testWithAxe(`
      <duet-choice-group value="one" label="Valitse lemmikki" direction="vertical" name="group">
        <duet-choice type="radio" label="Kissa" icon="category-pet-cat" value="one" expand>
          <div slot="info">
            LähiTapiola-ryhmä on keskinäiseen yhtiömuotoon perustuva, asiakkaidensa omistama yhtiöryhmä, joka palvelee monia
            eri asiakasryhmiä. <duet-link url="https://www.lahitapiola.fi/henkilo">LähiTapiolan tuotteet</duet-link> ja
            palvelut kattavat vahinko-, henki- ja eläkevakuuttamisen sekä sijoittamisen ja säästämisen palvelut. Olemme myös
            yritysten riskienhallinnan ja henkilöstön työhyvinvoinnin ammattilainen. Omistaja-asiakkaita meillä on lähes 1,6
            miljoonaa.
          </div>
        </duet-choice>
      </duet-choice-group>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component with an additional content", async () => {
        const result = await testWithAxe(`
        <duet-choice-group value="one" label="Valitse vakuutus" direction="vertical" name="group">
          <duet-choice type="radio" label="Kotivakuutus" value="one" expand>
            <div slot="additional">
              <duet-paragraph size="small" margin="none">
                Testaajankuja 1<br />
                01740 Vantaa<br />
                Vakuutusnumero 1111344221
              </duet-paragraph>
            </div>
          </duet-choice>
        </duet-choice-group>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
});
