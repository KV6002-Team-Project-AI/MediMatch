/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
import { getColorByName } from "../../utils/token-utils";
describe("duet-divider", () => {
    it("should render a divider", async () => {
        const page = await createPage(`<duet-divider></duet-divider>`);
        const component = await page.find("duet-divider");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should provide a property that switches the theme", async () => {
        const page = await createPage(`<duet-divider theme="turva"></duet-divider>`);
        const element = await page.find("duet-divider >>> .duet-divider");
        expect(element).toHaveClass("duet-theme-turva");
    });
    it("should provide a property that removes the margin of the component", async () => {
        const page = await createPage(`<duet-divider margin="none"></duet-divider>`);
        const element = await page.find("duet-divider >>> .duet-m-0");
        expect(element).not.toBeNull();
    });
    it("should provide a property that changes color", async () => {
        const page = await createPage(`<duet-divider color="color-success"></duet-divider>`);
        const backgroundColor = await page.evaluate(() => {
            const divider = document.querySelector("duet-divider").shadowRoot.querySelector(".duet-divider");
            return window.getComputedStyle(divider).backgroundColor;
        });
        const expectedColor = getColorByName("color-success");
        expect(backgroundColor).toEqual(expectedColor);
    });
});
