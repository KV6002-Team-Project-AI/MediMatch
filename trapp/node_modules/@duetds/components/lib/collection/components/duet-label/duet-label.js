/*!
 * Built with Duet Design System
 */
import { Build, h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
import { getColorByName } from "../../utils/token-utils";
export class DuetLabel {
    constructor() {
        this.theme = "";
        this.for = undefined;
        this.margin = "auto";
        this.size = "medium";
        this.weight = "semi-bold";
        this.color = "";
    }
    /**
     * Component lifecycle events.
     */
    componentWillLoad() {
        inheritGlobalTheme(this);
    }
    /**
     * render() function
     * Always the last one in the class.
     */
    render() {
        if (Build.isServer) {
            return;
        }
        const color = getColorByName(this.color);
        return (h(Host, { class: {
                "duet-label": true,
                "duet-label-small": this.size === "small",
                "duet-theme-turva": this.theme === "turva",
                "duet-small-margin": this.margin === "small",
                "duet-m-0": this.margin === "none",
                [`duet-weight-${this.weight}`]: true,
            } }, h("label", { htmlFor: this.for, style: { color } }, h("span", null, h("slot", null)))));
    }
    static get is() { return "duet-label"; }
    static get encapsulation() { return "scoped"; }
    static get originalStyleUrls() {
        return {
            "$": ["duet-label.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["duet-label.css"]
        };
    }
    static get properties() {
        return {
            "theme": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "DuetTheme",
                    "resolved": "\"\" | \"default\" | \"turva\"",
                    "references": {
                        "DuetTheme": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetTheme"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Theme of the label."
                },
                "attribute": "theme",
                "reflect": false,
                "defaultValue": "\"\""
            },
            "for": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "ID of the component that the label is labelling."
                },
                "attribute": "for",
                "reflect": false
            },
            "margin": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetLabelMargin",
                    "resolved": "\"auto\" | \"none\" | \"small\"",
                    "references": {
                        "DuetLabelMargin": {
                            "location": "local",
                            "path": "/Users/mgibas/workspace/duet/packages/components/src/components/duet-label/duet-label.tsx",
                            "id": "src/components/duet-label/duet-label.tsx::DuetLabelMargin"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Controls the margin of the component."
                },
                "attribute": "margin",
                "reflect": false,
                "defaultValue": "\"auto\""
            },
            "size": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetLabelSize",
                    "resolved": "\"medium\" | \"small\"",
                    "references": {
                        "DuetLabelSize": {
                            "location": "local",
                            "path": "/Users/mgibas/workspace/duet/packages/components/src/components/duet-label/duet-label.tsx",
                            "id": "src/components/duet-label/duet-label.tsx::DuetLabelSize"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Controls the size of the label."
                },
                "attribute": "size",
                "reflect": false,
                "defaultValue": "\"medium\""
            },
            "weight": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetTextFontWeight",
                    "resolved": "\"normal\" | \"semi-bold\"",
                    "references": {
                        "DuetTextFontWeight": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetTextFontWeight"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Controls the weight of the label."
                },
                "attribute": "weight",
                "reflect": false,
                "defaultValue": "\"semi-bold\""
            },
            "color": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetColor",
                    "resolved": "string",
                    "references": {
                        "DuetColor": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetColor"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Custom color to be used for text, as a design token entered in camelCase or kebab-case.\nExample: \"color-primary\"."
                },
                "attribute": "color",
                "reflect": false,
                "defaultValue": "\"\""
            }
        };
    }
    static get elementRef() { return "element"; }
}
