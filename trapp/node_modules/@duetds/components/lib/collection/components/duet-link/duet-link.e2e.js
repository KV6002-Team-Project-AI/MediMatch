/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
describe("duet-link", () => {
    it("should render a link", async () => {
        const page = await createPage(`<duet-link></duet-link>`);
        const component = await page.find("duet-link");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should provide a property that renders aria-label", async () => {
        const page = await createPage(`<duet-link accessible-label="test"></duet-link>`);
        const element = await page.find("duet-link >>> .duet-link");
        expect(element.getAttribute("aria-label")).toEqual("test");
    });
    it("should provide a property that adds an ID for the link", async () => {
        const page = await createPage(`<duet-link identifier="test"></duet-link>`);
        const element = await page.find("duet-link >>> .duet-link");
        expect(element.getAttribute("id")).toEqual("test");
    });
    it("should provide a property that switches the theme", async () => {
        const page = await createPage(`<duet-link theme="turva"></duet-link>`);
        const element = await page.find("duet-link >>> .duet-link");
        expect(element).toHaveClass("duet-theme-turva");
    });
    it("should provide a property that adds a href for the link", async () => {
        const page = await createPage(`<duet-link url="test"></duet-link>`);
        const element = await page.find("duet-link >>> .duet-link");
        expect(element.getAttribute("href")).toEqual("test");
    });
    it("should provide a property that adds renders a target attribute", async () => {
        const page = await createPage(`<duet-link external></duet-link>`);
        const element = await page.find("duet-link >>> .duet-link");
        expect(element.getAttribute("target")).toEqual("_blank");
        expect(element.getAttribute("rel")).toEqual("noopener");
    });
    it("should provide a property that renders the link in different style variations", async () => {
        const page = await createPage(`<duet-link variation="block"></duet-link>`);
        const component = await page.find("duet-link");
        expect(component).toHaveClass("duet-link-block");
    });
    it("should provide a property that sets an icon for variations different than default", async () => {
        const page = await createPage(`<duet-link icon="form-location" variation="block"></duet-link>`);
        const element = await page.find("duet-link >>> duet-icon");
        expect(element).not.toBeNull();
    });
    it("should provide a property to switch off the padding of variations different than default", async () => {
        const page = await createPage(`<duet-link padding="none" variation="block"></duet-link>`);
        const element = await page.find("duet-link >>> a");
        expect(element).toHaveClass("duet-p-0");
    });
});
