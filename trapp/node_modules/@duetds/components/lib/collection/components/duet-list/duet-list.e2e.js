/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
describe("duet-list", () => {
    it("should render a definition list", async () => {
        const page = await createPage("<duet-list></duet-list>");
        const component = await page.find("duet-list");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should provide a property that switches the theme", async () => {
        const page = await createPage(`
      <duet-list theme="turva">
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list duet-list-item");
        expect(element).toHaveClass("duet-theme-turva");
    });
    it("should provide a property that removes the margin of the component", async () => {
        const page = await createPage(`
      <duet-list margin="none">
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list >>> .duet-m-0");
        expect(element).not.toBeNull();
    });
    it("should provide a property that renders list in different style variations", async () => {
        const page = await createPage(`
      <duet-list variation="striped">
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list duet-list-item");
        expect(element).toHaveClass("duet-list-striped");
    });
    it("should provide a property that allows to disable vertical stacking", async () => {
        const page = await createPage(`
      <duet-list responsive="false">
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list duet-list-item");
        expect(element).toHaveClass("duet-no-stacking");
        expect(element).not.toHaveClass("duet-list-item-breakpoint-small");
    });
    it("should provide a property that in responsive mode adjusts the alignment of the list items on mobile breakpoint", async () => {
        const page = await createPage(`
      <duet-list mobile="center">
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list .duet-list-mobile-center");
        expect(element).not.toBeNull();
    });
    it("should provide property that in responsive mode switches the breakpoint used to trigger the content stacking", async () => {
        const page = await createPage(`
      <duet-list breakpoint="large">
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list .duet-list-item-breakpoint-large");
        expect(element).not.toBeNull();
    });
    it("should automatically refresh itself when content changes", async () => {
        const page = await createPage(`
      <duet-list>
        <duet-list-item>
          <span slot="label">Nimi</span>
          <span slot="value">Lasse Makinen</span>
        </duet-list-item>
      </duet-list>
    `);
        const element = await page.find("duet-list");
        // should be updated when setting the *attribute*
        element.setAttribute("variation", "striped");
        await page.waitForChanges();
        const test = await page.find("duet-list-item");
        expect(test).toHaveClass("duet-list-striped");
        // should also be updated when setting the label *property*
        element.setProperty("variation", "default");
        await page.waitForChanges();
        expect(test).not.toHaveClass("duet-list-striped");
    });
});
