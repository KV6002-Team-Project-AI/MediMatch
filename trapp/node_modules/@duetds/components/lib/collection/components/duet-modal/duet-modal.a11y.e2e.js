/*!
 * Built with Duet Design System
 */
import { formatViolations, options as axeRunOptions, testWithAxe } from "../../utils/axe-core-utils";
describe("[a11y] duet-modal", () => {
    it("should render an accessible component", async () => {
        const result = await testWithAxe(`
          <duet-modal
            size="small"
            heading="Onko matkapuhelimesi tai tablettisi rikkoutunut?"
            icon="damage-breakage"
            class="duet-text-center"
            active
          >
            <duet-paragraph>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna
              aliqua. Ut enim ad minim veniam quis nostrud.
            </duet-paragraph>
            <duet-paragraph>
              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.
            </duet-paragraph>
            <duet-button variation="primary" onclick="modal.hide()"> Jatka </duet-button>
          </duet-modal>

      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component in confirmation variant", async () => {
        const result = await testWithAxe(`
          <duet-modal
            heading="Oletko varma, että haluat poistua tältä&nbsp;sivulta?"
            icon="messaging-alert"
            color="warning"
            size="small"
            variation="dialog"
            class="duet-text-center"
            active
          >
            <duet-paragraph> Kaikki täyttämäsi tiedot poistetaan. </duet-paragraph>
            <duet-button variation="primary" onclick="modal.hide()"> Kyllä </duet-button>
            <duet-button onclick="modal.hide()"> Ei </duet-button>
          </duet-modal>

      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
});
