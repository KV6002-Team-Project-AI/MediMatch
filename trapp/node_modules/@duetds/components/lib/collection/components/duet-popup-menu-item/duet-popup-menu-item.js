/*!
 * Built with Duet Design System
 */
import { h, Host } from "@stencil/core";
import { inheritGlobalTheme } from "../../common/themeable-component";
export class DuetPopupMenuItem {
    constructor() {
        /**
         * Component event handling.
         */
        this.onFocus = (ev) => {
            this.focus = true;
            this.duetFocus.emit({
                originalEvent: ev,
                value: this.value,
                component: "duet-popup-menu-item",
            });
        };
        this.onBlur = (ev) => {
            this.focus = false;
            this.duetBlur.emit({
                originalEvent: ev,
                value: this.value,
                component: "duet-popup-menu-item",
            });
        };
        this.focus = false;
        this.accessibleLabel = undefined;
        this.theme = "";
        this.url = undefined;
        this.external = false;
        this.value = undefined;
        this.leadingIcon = undefined;
        this.leadingIconColor = undefined;
        this.trailingIcon = undefined;
        this.trailingText = undefined;
        this.active = false;
    }
    /**
     * Component lifecycle events.
     */
    componentWillLoad() {
        inheritGlobalTheme(this);
    }
    /**
     * Sets focus. Use this method instead of the global focus().
     */
    async setFocus(options) {
        setTimeout(() => this.itemElement.focus(options), 200);
    }
    /**
     * isFocused.
     */
    async isFocused() {
        return this.focus;
    }
    render() {
        const TagName = this.url ? "a" : "button";
        const classes = {
            "duet-popup-menu-item": true,
            active: this.active,
            "duet-theme-turva": this.theme === "turva",
        };
        return (h(Host, null, h(TagName, { ref: element => (this.itemElement = element), tabIndex: -1, onFocus: this.onFocus, onBlur: this.onBlur, role: "menuitem", "aria-label": this.accessibleLabel, class: classes, value: this.value, href: this.url, target: this.external ? "_blank" : undefined, rel: this.external ? "noopener" : undefined }, this.leadingIcon && (h("duet-icon", { name: this.leadingIcon, size: "x-small", color: this.leadingIconColor ? this.leadingIconColor : "currentColor", class: "duet-popup-menu-item-leading", margin: "none" })), h("span", { class: "duet-popup-menu-item-label" }, h("slot", null)), this.trailingIcon && (h("duet-icon", { name: this.trailingIcon, size: "x-small", color: "currentColor", class: "duet-popup-menu-item-trailing", margin: "none" })), this.trailingText && h("span", { class: "duet-popup-menu-item-trailing" }, this.trailingText))));
    }
    static get is() { return "duet-popup-menu-item"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["duet-popup-menu-item.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["duet-popup-menu-item.css"]
        };
    }
    static get properties() {
        return {
            "accessibleLabel": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Adds accessible label for the button or link that is only shown for screen readers.\nTypically, this label text replaces the visible text on the button for\nusers who use assistive technology."
                },
                "attribute": "accessible-label",
                "reflect": false
            },
            "theme": {
                "type": "string",
                "mutable": true,
                "complexType": {
                    "original": "DuetTheme",
                    "resolved": "\"\" | \"default\" | \"turva\"",
                    "references": {
                        "DuetTheme": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetTheme"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Theme."
                },
                "attribute": "theme",
                "reflect": false,
                "defaultValue": "\"\""
            },
            "url": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "A destination to link to, rendered in the href attribute of a link."
                },
                "attribute": "url",
                "reflect": false
            },
            "external": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Forces URL to open in a new browser tab. Used together with URL prop."
                },
                "attribute": "external",
                "reflect": false,
                "defaultValue": "false"
            },
            "value": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Value"
                },
                "attribute": "value",
                "reflect": false,
                "defaultValue": "undefined"
            },
            "leadingIcon": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetIconName",
                    "resolved": "string",
                    "references": {
                        "DuetIconName": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetIconName"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Left icon."
                },
                "attribute": "leading-icon",
                "reflect": false,
                "defaultValue": "undefined"
            },
            "leadingIconColor": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetIconColor",
                    "resolved": "string",
                    "references": {
                        "DuetIconColor": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetIconColor"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Left icon color."
                },
                "attribute": "leading-icon-color",
                "reflect": false,
                "defaultValue": "undefined"
            },
            "trailingIcon": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "DuetIconName",
                    "resolved": "string",
                    "references": {
                        "DuetIconName": {
                            "location": "import",
                            "path": "../../common-types",
                            "id": "src/common-types.d.ts::DuetIconName"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Right icon."
                },
                "attribute": "trailing-icon",
                "reflect": false,
                "defaultValue": "undefined"
            },
            "trailingText": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Short text to display after the label, e.g. keyboard shortcut."
                },
                "attribute": "trailing-text",
                "reflect": false,
                "defaultValue": "undefined"
            },
            "active": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Is the item currently active (e.g. selected)"
                },
                "attribute": "active",
                "reflect": false,
                "defaultValue": "false"
            }
        };
    }
    static get states() {
        return {
            "focus": {}
        };
    }
    static get events() {
        return [{
                "method": "duetFocus",
                "name": "duetFocus",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Emitted when the item receives focus."
                },
                "complexType": {
                    "original": "DuetPopupMenuItemEvent",
                    "resolved": "{ originalEvent?: Event; value: string; component: \"duet-popup-menu-item\"; }",
                    "references": {
                        "DuetPopupMenuItemEvent": {
                            "location": "local",
                            "path": "/Users/mgibas/workspace/duet/packages/components/src/components/duet-popup-menu-item/duet-popup-menu-item.tsx",
                            "id": "src/components/duet-popup-menu-item/duet-popup-menu-item.tsx::DuetPopupMenuItemEvent"
                        }
                    }
                }
            }, {
                "method": "duetBlur",
                "name": "duetBlur",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": "Emitted when the item loses focus."
                },
                "complexType": {
                    "original": "DuetPopupMenuItemEvent",
                    "resolved": "{ originalEvent?: Event; value: string; component: \"duet-popup-menu-item\"; }",
                    "references": {
                        "DuetPopupMenuItemEvent": {
                            "location": "local",
                            "path": "/Users/mgibas/workspace/duet/packages/components/src/components/duet-popup-menu-item/duet-popup-menu-item.tsx",
                            "id": "src/components/duet-popup-menu-item/duet-popup-menu-item.tsx::DuetPopupMenuItemEvent"
                        }
                    }
                }
            }];
    }
    static get methods() {
        return {
            "setFocus": {
                "complexType": {
                    "signature": "(options?: FocusOptions) => Promise<void>",
                    "parameters": [{
                            "name": "options",
                            "type": "FocusOptions",
                            "docs": ""
                        }],
                    "references": {
                        "Promise": {
                            "location": "global",
                            "id": "global::Promise"
                        },
                        "FocusOptions": {
                            "location": "global",
                            "id": "global::FocusOptions"
                        }
                    },
                    "return": "Promise<void>"
                },
                "docs": {
                    "text": "Sets focus. Use this method instead of the global focus().",
                    "tags": []
                }
            },
            "isFocused": {
                "complexType": {
                    "signature": "() => Promise<boolean>",
                    "parameters": [],
                    "references": {
                        "Promise": {
                            "location": "global",
                            "id": "global::Promise"
                        }
                    },
                    "return": "Promise<boolean>"
                },
                "docs": {
                    "text": "isFocused.",
                    "tags": []
                }
            }
        };
    }
    static get elementRef() { return "element"; }
}
