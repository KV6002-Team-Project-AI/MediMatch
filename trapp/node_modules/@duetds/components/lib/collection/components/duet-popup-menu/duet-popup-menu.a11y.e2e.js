/*!
 * Built with Duet Design System
 */
import { formatViolations, options as axeRunOptions, testWithAxe } from "../../utils/axe-core-utils";
describe("[a11y] duet-popup-menu", () => {
    it("should render an accessible component", async () => {
        const result = await testWithAxe(`
        <duet-button size="small" id="menu-toggle">toggle menu</duet-button>
        <duet-popup-menu accessibleLabel="Sample action menu" id="sample-menu">
          <duet-popup-menu-item leading-icon="category-pet">Some Action</duet-popup-menu-item>
          <duet-popup-menu-item>Another Action With a Much Longer Label</duet-popup-menu-item>
          <duet-popup-menu-item active trailing-icon="messaging-success">Active Action</duet-popup-menu-item>
          <duet-popup-menu-item url="#" trailing-text="âŒ˜ A">Actually a link</duet-popup-menu-item>
        </duet-popup-menu>

        <script>
        document.getElementById('menu-toggle').addEventListener('click', function(evt) {
          const menu = document.getElementById('sample-menu');
          menu.controller = evt.target;
          menu.toggle();
        });
        </script>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
});
