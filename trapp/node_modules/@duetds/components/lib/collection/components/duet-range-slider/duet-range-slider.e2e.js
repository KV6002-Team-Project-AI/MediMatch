/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
describe("duet-range-slider", () => {
    it("should render a range-slider", async () => {
        const page = await createPage(`<duet-range-slider></duet-range-slider>`);
        const component = await page.find("duet-range-slider");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should provide a property that switches the theme", async () => {
        const page = await createPage(`<duet-range-slider theme="turva"></duet-range-slider>`);
        const element = await page.find("duet-range-slider .duet-range-container");
        expect(element).toHaveClass("duet-theme-turva");
    });
    it("should provide a property that removes the margin of the component", async () => {
        const page = await createPage(`<duet-range-slider margin="none"></duet-range-slider>`);
        const element = await page.find(".duet-m-0");
        expect(element).not.toBeNull();
    });
    it("should provide a property that expands the input to fill 100% width", async () => {
        const page = await createPage(`<duet-range-slider expand></duet-range-slider>`);
        const element = await page.find("duet-range-slider");
        expect(element).toHaveClass("duet-expand");
    });
    it("should provide a property that adds an ID for the input", async () => {
        const page = await createPage(`<duet-range-slider identifier="test"></duet-range-slider>`);
        const element = await page.find("duet-range-slider input");
        expect(element.getAttribute("id")).toEqual("test");
    });
    it("should provide a property that renders label", async () => {
        const page = await createPage(`<duet-range-slider label="test"></duet-range-slider>`);
        const element = await page.find("duet-range-slider duet-label label");
        expect(element.innerText).toEqual("test");
    });
    it("should provide a property that sets the step amount", async () => {
        const page = await createPage(`<duet-range-slider step="10"></duet-range-slider>`);
        const element = await page.find("duet-range-slider input");
        expect(element.getAttribute("step")).toEqual("10");
    });
    it("should provide a property that sets the max amount", async () => {
        const page = await createPage(`<duet-range-slider max="10"></duet-range-slider>`);
        const element = await page.find("duet-range-slider input");
        expect(element.getAttribute("max")).toEqual("10");
    });
    it("should provide a property that sets the min amount", async () => {
        const page = await createPage(`<duet-range-slider min="1"></duet-range-slider>`);
        const element = await page.find("duet-range-slider input");
        expect(element.getAttribute("min")).toEqual("1");
    });
    it("should provide a property that sets the unit", async () => {
        const page = await createPage(`<duet-range-slider unit=" test"></duet-range-slider>`);
        const element = await page.find("duet-range-slider input");
        expect(element).toEqualAttribute("aria-valuetext", "0  test");
    });
});
