/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
describe("duet-range-stepper", () => {
    it("should render a logo", async () => {
        const page = await createPage(`<duet-range-stepper total="20" step-size="10" step-index="1"></duet-range-stepper>`);
        const component = await page.find("duet-range-stepper");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should display range", async () => {
        const page = await createPage(`<duet-range-stepper total="20" step-size="10" step-index="1"></duet-range-stepper>`);
        const counter = await page.find("duet-range-stepper >>> .duet-range-step-counter");
        expect(counter.textContent).toBe("1–10 / 20");
    });
    it("should update range on next button click", async () => {
        const page = await createPage(`<duet-range-stepper total="20" step-size="10" step-index="1"></duet-range-stepper>`);
        const nextButton = await page.find("duet-range-stepper >>> .duet-range-step-plus");
        nextButton.click();
        await page.waitForEvent("click");
        await page.waitForChanges();
        //after mutation, stepIndex should be clamped
        const counter = await page.find("duet-range-stepper >>> .duet-range-step-counter");
        expect(counter.textContent).toBe("11–20 / 20");
    });
    it("should not go beyond last page", async () => {
        const page = await createPage(`<duet-range-stepper total="20" step-size="10" step-index="2"></duet-range-stepper>`);
        const nextButton = await page.find("duet-range-stepper >>> .duet-range-step-plus");
        nextButton.click();
        await page.waitForChanges();
        //after mutation, stepIndex should be clamped
        const counter = await page.find("duet-range-stepper >>> .duet-range-step-counter");
        expect(counter.textContent).toBe("11–20 / 20");
    });
    it("should clamp stepIndex when increasing stepSize would result out of bounds stepIndex", async () => {
        const page = await createPage(`<duet-range-stepper total="33" step-size="10" step-index="3"></duet-range-stepper>`);
        const nextButton = await page.find("duet-range-stepper >>> .duet-range-step-plus");
        nextButton.click();
        await page.waitForChanges();
        const counter = await page.find("duet-range-stepper >>> .duet-range-step-counter");
        expect(counter.textContent).toBe("31–33 / 33");
        const stepper = await page.find("duet-range-stepper");
        stepper.setProperty("stepSize", 20);
        await page.waitForChanges();
        //after mutation, stepIndex should be clamped
        const stepperPostChange = await page.find("duet-range-stepper");
        const counterPostChange = await page.find("duet-range-stepper >>> .duet-range-step-counter");
        expect(await stepperPostChange.getProperty("stepIndex")).toBe(2);
        expect(counterPostChange.textContent).toBe("21–33 / 33");
    });
});
