/*!
 * Built with Duet Design System
 */
import { formatViolations, mergeRules, options as axeRunOptions, testWithAxe } from "../../utils/axe-core-utils";
const disabledRules = {
    // The component has a dedicated focus trap element
    "aria-hidden-focus": { enabled: false },
    // ShadowDOM isolates identifiers (needed for aria-controls) https://github.com/w3c/aria/issues/864
    "aria-valid-attr-value": { enabled: false },
};
describe("[a11y] duet-tooltip", () => {
    it("should render an accessible component", async () => {
        const result = await testWithAxe(`
       <duet-tooltip active>
          Hello, I’m a tooltip! To close me you can hit ESC key, click the close button, or click the X button.
        </duet-tooltip>
      `, mergeRules(axeRunOptions, disabledRules));
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
    it("should render an accessible component in the input", async () => {
        const result = await testWithAxe(`
       <duet-input
          label="Katuosoite"
          placeholder="Kadunnimi 1 A 2"
          tooltip="Hello, I’m a tooltip! To close me, you can click outside of the tooltip, hit ESC key or click the X button."
          required
          expand
        ></duet-input>
      `, axeRunOptions);
        expect(result).not.toBeNull();
        expect(formatViolations(result.violations)).toEqual([]);
    });
});
