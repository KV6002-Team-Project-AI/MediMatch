/*!
 * Built with Duet Design System
 */
import { createPage } from "../../utils/test-utils";
import { getBrowsedFiles } from "./mock.helpers";
const fileList = getBrowsedFiles();
describe("duet-upload", () => {
    it("should render an upload component", async () => {
        const page = await createPage(`<duet-upload></duet-upload>`);
        const component = await page.find("duet-upload");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should render an upload component & populate the file list", async () => {
        const page = await createPage(`<duet-upload files=${fileList}></duet-upload>`);
        const component = await page.find("duet-upload");
        expect(component).not.toBeNull();
        expect(component).toHaveClass("hydrated");
    });
    it("should provide a way to retrieve errorCodes", async () => {
        const page = await createPage(`<duet-upload files=${fileList}></duet-upload>`);
        const component = await page.find("duet-upload");
        expect(component).not.toBeNull();
        const errorCodes = (await component.getProperty("errorCodes")) || null;
        expect(errorCodes).not.toBeNull();
        expect(errorCodes[0].type).toBe("default");
    });
    // TODO: gives js not found error
    it.skip("should provide a way to change errorCodes", async () => {
        const page = await createPage(`<duet-upload files=${fileList}></duet-upload>`);
        const component = await page.find("duet-upload");
        const errorCodes = (await component.getProperty("errorCodes")) || null;
        expect(errorCodes).not.toBeNull();
        errorCodes[0] = {
            type: "default",
            system_message: "unknown error",
            message: {
                fi: "test",
                sv: "test",
                en: "test",
            },
        };
        component.setProperty("errorCodes", errorCodes);
        component.setProperty("files", fileList);
        await page.waitForChanges();
        expect(component.getAttribute("files").length).toBe(7);
    });
});
