/*!
 * Built with Duet Design System
 */
import { p as proxyCustomElement, H, h, d as Host } from './p-471a62cc.js';
import { i as inheritGlobalTheme } from './p-a58bd561.js';
import { s as subscribeTabbingChange, u as unsubscribeTabbingChange } from './p-8f253845.js';
import { a as getLanguage, c as connectLanguageChangeObserver, d as disconnectLanguageChangeObserver, g as getLocaleString } from './p-2e36d5bf.js';
import { d as defineCustomElement$3 } from './p-c493eecb.js';
import { d as defineCustomElement$2 } from './p-3158e24f.js';

var actionArrowRightSmall={"title":"action-arrow-right-small","tags":"action arrow right small caret","svg":"<svg fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\"><path d=\"M19.5 12a2.3 2.3 0 0 1-.78 1.729L7.568 23.54a1.847 1.847 0 0 1-2.439-2.773l9.752-8.579a.25.25 0 0 0 0-.376L5.129 3.233A1.847 1.847 0 0 1 7.568.46l11.148 9.808A2.31 2.31 0 0 1 19.5 12z\"/></svg>"};

const duetBreadcrumbCss = "*,*::after,*::before{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none}:host{box-sizing:border-box;padding:0;margin:0;background:transparent;border:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;display:list-item;width:auto}.container{display:flex;gap:8px;align-items:center}.hide{display:none}.duet-breadrumbs-arrow{display:block;align-items:center;justify-content:center;width:0.375rem;min-width:0.375rem;height:0.375rem;min-height:0.375rem}.duet-breadcrumb{display:flex;flex-direction:row;align-items:center;justify-content:flex-start;height:100%;font-size:0.875rem;font-weight:inherit;line-height:1.25;color:inherit;text-decoration:none}.duet-breadcrumb:focus{outline:0}:host(.user-is-tabbing) .duet-breadcrumb:focus{box-shadow:0 0 0 4px rgba(0, 119, 179, 0.3), 0 0 0 1px #0077b3}:host(.user-is-tabbing) .duet-breadcrumb.duet-theme-turva:focus{box-shadow:0 0 0 4px rgba(23, 28, 58, 0.2), 0 0 0 1px #171c3a}";

const DuetBreadcrumb$1 = /*@__PURE__*/ proxyCustomElement(class DuetBreadcrumb extends H {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.currentCrumb = {
            fi: "disabled. Nykyinen sivu",
            sv: "disabled. Visa mer",
            en: "disabled. Nuvarande sida",
        };
        this.hasSlottedContent = false;
        this.theme = "";
        this.language = getLanguage();
        this.href = "";
        this.icon = "";
        this.iconSize = "x-small";
        this.accessibleLabel = undefined;
    }
    /**
     * Component lifecycle events.
     */
    componentWillLoad() {
        inheritGlobalTheme(this);
    }
    connectedCallback() {
        connectLanguageChangeObserver(this);
        subscribeTabbingChange(this);
        this.hasSlottedContent = Array.from(this.element.childNodes).length > 0;
    }
    disconnectedCallback() {
        disconnectLanguageChangeObserver(this);
        unsubscribeTabbingChange(this);
    }
    /**
     * render() function
     * Always the last one in the class.
     */
    render() {
        var _a;
        return (h(Host, { role: "listitem" }, h("div", { class: "container" }, !this.icon && (h("duet-icon", { class: "duet-breadrumbs-arrow", size: "auto", icon: actionArrowRightSmall.svg, margin: "none", color: "currentColor" })), h("a", { class: {
                "duet-breadcrumb": true,
                "duet-theme-turva": this.theme === "turva",
            }, href: this.href ? this.href : undefined, "aria-label": `${!this.href ? `${getLocaleString(this.currentCrumb)} ` : ""}${(_a = this.accessibleLabel) !== null && _a !== void 0 ? _a : this.element.innerHTML}`, role: "link" }, this.icon && [
            h("duet-icon", { size: this.iconSize, name: this.icon, margin: "none", color: "currentColor" }),
            this.hasSlottedContent && h("duet-spacer", { size: "x-small", direction: "horizontal" }),
        ], h("slot", null)))));
    }
    get element() { return this; }
    static get style() { return duetBreadcrumbCss; }
}, [1, "duet-breadcrumb", {
        "theme": [1025],
        "href": [1025],
        "icon": [1025],
        "iconSize": [1, "icon-size"],
        "accessibleLabel": [1, "accessible-label"],
        "language": [32]
    }]);
function defineCustomElement$1() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["duet-breadcrumb", "duet-icon", "duet-spacer"];
    components.forEach(tagName => { switch (tagName) {
        case "duet-breadcrumb":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, DuetBreadcrumb$1);
            }
            break;
        case "duet-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$3();
            }
            break;
        case "duet-spacer":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
    } });
}

const DuetBreadcrumb = DuetBreadcrumb$1;
const defineCustomElement = defineCustomElement$1;

export { DuetBreadcrumb, defineCustomElement };
