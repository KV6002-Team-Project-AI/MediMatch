/*!
 * Built with Duet Design System
 */
const n=n=>"ArrowLeft"===n.key||"Left"===n.key,o=n=>"ArrowUp"===n.key||"Up"===n.key,s=n=>"ArrowRight"===n.key||"Right"===n.key,a=n=>"ArrowDown"===n.key||"Down"===n.key,w=w=>a(w)||s(w)||o(w)||n(w),e=n=>"Escape"===n.key||"Esc"===n.key,d=n=>"Tab"===n.key,t=n=>"Backspace"===n.key,i=n=>" "===n.key||"Spacebar"===n.key,r=n=>"+"===n.key||"Add"===n.key,c=n=>"-"===n.key||"Subtract"===n.key,u=n=>"?"===n.key,f=n=>"Enter"===n.key,p=n=>f(n)||i(n),b=n=>n.key>="0"&&n.key<="9",k=new Set;function A(n){k.forEach((o=>{o.element.classList[n?"add":"remove"]("user-is-tabbing")}))}function g(n){d(n)&&(A(!0),window.removeEventListener("keydown",g),window.addEventListener("mousedown",y,!1))}function y(){A(!1),window.removeEventListener("mousedown",y),window.addEventListener("keydown",g,!1)}"undefined"!=typeof window&&window.addEventListener("keydown",g,!1);const h=n=>{k.add(n)},m=n=>{k.delete(n)};export{s as a,o as b,a as c,n as d,t as e,e as f,i as g,u as h,p as i,f as j,w as k,b as l,c as m,r as n,d as o,h as s,m as u}