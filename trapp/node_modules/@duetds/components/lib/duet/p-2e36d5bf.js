/*!
 * Built with Duet Design System
 */
import{c as e}from"./p-0e052642.js";const t={fi:"fi-FI",en:"en-GB",us:"en-US",sv:"sv-SE"},n={fi:"€",en:"£",us:"$",sv:"€"},r=["fi","en","sv"],o="fi",a=()=>document.documentElement.lang?document.documentElement.lang.toLowerCase():o,s=(e=a())=>r.includes(e)?e:o,i=(e=a())=>s(e),c=e=>{const r={locale:t[e],money:n[e]};if(r.locale&&r.money)return r;throw new Error(`Locale for "${e}" not found`)},u=t=>{if("string"==typeof t)try{return JSON.parse(e(t))}catch(e){console.log("sanitizeString received a string, that didnt parse to json object",t,e)}return t},f=(e,t)=>{const n=u(e);return t?n[s(t)]:n[i()]},d=new Set,l=new WeakMap;new MutationObserver((e=>{let t=o;for(const n of e)if("attributes"===n.type&&"lang"===n.attributeName){t=n.oldValue;break}document.documentElement.dataset.duetLangObserve&&d.forEach((e=>{e.language&&(e.language=i()),l.has(e)&&l.get(e).forEach((n=>{e[n.defaults]&&e[n.prop]===e[n.defaults][t]&&(e[n.prop]=f(e[n.defaults]))}))}))})).observe(document.documentElement,{attributeFilter:["lang"],attributeOldValue:!0});const g=(e,t)=>{d.add(e),t&&(Array.isArray(t)||(t=[t]),t.some((t=>!(t.prop in e)||!(t.defaults in e)))&&(console.error("connectLanguageChangeObserver: component must have target.prop and target.defaults properties"),t=t.filter((t=>t.prop in e&&t.defaults in e))),l.set(e,t))},p=e=>{d.delete(e),l.delete(e)};export{i as a,c as b,g as c,p as d,f as g,u as s}