/*!
 * Built with Duet Design System
 */
import{c as convertHtmlQuotes}from"./string-utils-ca039233.js";var localeLookUpTable={fi:"fi-FI",en:"en-GB",us:"en-US",sv:"sv-SE"};var localeMonetarySignifierLookUpTable={fi:"€",en:"£",us:"$",sv:"€"};var defLanguageArray=["fi","en","sv"];var defaultLanguage="fi";var getCurrentLanguage=function(){return document.documentElement.lang?document.documentElement.lang.toLowerCase():defaultLanguage};var isOfTypeLanguage=function(e){return defLanguageArray.includes(e)};var checkForLanguage=function(e){if(e===void 0){e=getCurrentLanguage()}if(isOfTypeLanguage(e)){return e}else{return defaultLanguage}};var getLanguage=function(e){if(e===void 0){e=getCurrentLanguage()}return checkForLanguage(e)};var getLocale=function(e){var a={locale:localeLookUpTable[e],money:localeMonetarySignifierLookUpTable[e]};if(a.locale&&a.money){return a}throw new Error('Locale for "'.concat(e,'" not found'))};var sanitizeString=function(e){var a=typeof e==="string";if(a){try{return JSON.parse(convertHtmlQuotes(e))}catch(a){console.log("sanitizeString received a string, that didnt parse to json object",e,a)}}return e};var getLocaleString=function(e,a){var n=sanitizeString(e);if(a){return n[checkForLanguage(a)]}else{return n[getLanguage()]}};var languageChangeSubscribers=new Set;var languageChangeTargets=new WeakMap;var languagaChangeObserverCallback=function(e){var a=defaultLanguage;for(var n=0,r=e;n<r.length;n++){var g=r[n];if(g.type==="attributes"&&g.attributeName==="lang"){a=g.oldValue;break}}if(document.documentElement.dataset.duetLangObserve){languageChangeSubscribers.forEach((function(e){if(e.language){e.language=getLanguage()}if(languageChangeTargets.has(e)){languageChangeTargets.get(e).forEach((function(n){if(e[n.defaults]&&e[n.prop]===e[n.defaults][a]){e[n.prop]=getLocaleString(e[n.defaults])}}))}}))}};{var languageChangeObserver=new MutationObserver(languagaChangeObserverCallback);languageChangeObserver.observe(document.documentElement,{attributeFilter:["lang"],attributeOldValue:true})}var connectLanguageChangeObserver=function(e,a){languageChangeSubscribers.add(e);if(a){if(!Array.isArray(a)){a=[a]}if(a.some((function(a){return!(a.prop in e)||!(a.defaults in e)}))){console.error("connectLanguageChangeObserver: component must have target.prop and target.defaults properties");a=a.filter((function(a){return a.prop in e&&a.defaults in e}))}languageChangeTargets.set(e,a)}};var disconnectLanguageChangeObserver=function(e){languageChangeSubscribers.delete(e);languageChangeTargets.delete(e)};export{getLanguage as a,getLocale as b,connectLanguageChangeObserver as c,disconnectLanguageChangeObserver as d,getLocaleString as g,sanitizeString as s};