/*!
 * Built with Duet Design System
 */
var Teleport=function(){function t(t,i){this.isActive=false;this.element=t;this.target=i||document.body;this.teleportId="".concat(Math.random(),"-").concat(Date.now()).substring(2)}t.prototype.go=function(t){if(t===void 0){t=false}var i=this.element.getAttribute("skip-teleport");if(i!==null&&i!=="false"){return}if(!this.element.dataset.reactPortal){this.stub=document.createElement("template");this.element.insertAdjacentElement("afterend",this.stub);this.target.appendChild(this.element)}if(t){this._makeSiblingsInert()}this.deletionObserver=new MutationObserver(this._deletionObserverCallback.bind(this));this.deletionObserver.observe(document.documentElement,{childList:true,subtree:true});this.isActive=true};t.prototype.resume=function(t){if(t===void 0){t=0}var i=this.element.getAttribute("skip-teleport");if(i!==null&&i!=="false"){return}if(!this.isActive){return}this.isActive=false;if(t){setTimeout(this._resume.bind(this),t)}else{this._resume()}};t.prototype._resume=function(){if(!this.element.dataset.reactPortal){this.stub.insertAdjacentElement("beforebegin",this.element);this.stub.remove()}this._removeInertFromSiblings();this.deletionObserver.disconnect()};t.prototype._remove=function(){var t,i;(t=this.element)===null||t===void 0?void 0:t.remove();(i=this.stub)===null||i===void 0?void 0:i.remove();this._removeInertFromSiblings();this.deletionObserver.disconnect()};t.prototype._makeSiblingsInert=function(){var t=this;var i=Array.from(this.target.children);i.forEach((function(i){if(i!==t.element){i.dataset.duetTeleportId=(i.dataset.duetTeleportId||"")+t.teleportId;i.inert=true}}))};t.prototype._removeInertFromSiblings=function(){var t=this;var i=Array.from(this.target.children);i.forEach((function(i){var s;if((s=i.dataset.duetTeleportId)===null||s===void 0?void 0:s.includes(t.teleportId)){i.dataset.duetTeleportId=i.dataset.duetTeleportId.replace(t.teleportId,"");if(i.dataset.duetTeleportId===""){delete i.dataset.duetTeleportId;i.inert=false}}}))};t.prototype._deletionObserverCallback=function(t){var i=this;t.forEach((function(t){if(Array.from(t.removedNodes).includes(i.element)||Array.from(t.removedNodes).some((function(t){return t.contains(i.stub)}))){i._remove()}}))};return t}();export{Teleport as T};