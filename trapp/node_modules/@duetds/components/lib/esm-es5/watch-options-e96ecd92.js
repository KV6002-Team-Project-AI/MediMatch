/*!
 * Built with Duet Design System
 */
var watchFor=function(t,e,r,n,i){if(i===void 0){i={childList:true,subtree:true}}var o;if(typeof MutationObserver!=="undefined"){o=new MutationObserver((function(t){r(n(t,e))}));o.observe(t,i)}return o};var watchForOptions=function(t,e,r){return watchFor(t,e,r,getSelectedOption)};var watchForElement=function(t,e,r){return watchFor(t,e,r,getElementItem,{childList:true,subtree:true})};var getElementItem=function(t){var e=false;var r=false;t.forEach((function(t){if(t.addedNodes.length){e=true}if(t.removedNodes.length){r=true}}));return{addedNode:e,removedNode:r,mutationList:t}};var getSelectedOption=function(t,e){var r;t.forEach((function(t){for(var n=0;n<t.addedNodes.length;n++){r=findCheckedOption(t.addedNodes[n],e)||r}}));return r};var findCheckedOption=function(t,e){if(t.nodeType!==1){return undefined}var r=t.tagName===e.toUpperCase()?[t]:Array.from(t.querySelectorAll(e));return r.find((function(t){return t.checked===true}))};export{watchForElement as a,findCheckedOption as f,watchForOptions as w};