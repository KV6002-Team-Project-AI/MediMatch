/**
 * Teleport helps resolving z-index issues of overlapping popup elements.
 * Initiate it in your component's willLoad or didLoad lifecycle hook.
 * When you open the popup, call teleport.go() and move focus to the popup.
 * When you close the popup, call teleport.resume() and move focus to the element that opened the popup.
 * If your popup has closing animation, use the timeout parameter.
 */
export declare class Teleport {
    element: HTMLElement;
    target: HTMLElement;
    stub: HTMLElement;
    teleportId: string;
    deletionObserver: MutationObserver;
    isActive: boolean;
    constructor(element: HTMLElement, target?: HTMLElement);
    /**
     * @param makeSiblingsInert - make all siblings of the element inert, use only with modals
     */
    go(makeSiblingsInert?: boolean): void;
    resume(delay?: number): void;
    private _resume;
    private _remove;
    private _makeSiblingsInert;
    private _removeInertFromSiblings;
    /**
     * If the teleported element or its component (observed via stub) is removed from DOM, clean up the teleport.
     */
    private _deletionObserverCallback;
}
